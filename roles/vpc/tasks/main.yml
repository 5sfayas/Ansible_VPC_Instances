---
# tasks file for vpc
#note: you can have diffrent roles for vpc, private and public subnet
# to simply change the associations. But, kep this way
# create vpc 10.0.0./16
# in my case i have 3 availability zone. though, i create subnets for
# each Availability zone
# create 3 public subnets and 3 private subnets each AZ
# create internet gateway for public subnets
# IAM key is passed from environmental variables

- include_vars: ./group_vars/all.yml

- name: create vpc with 10.0.0.0/16
  ec2_vpc_net:
    name: ansibletest
    cidr_block: 10.0.0.0/16
    region: "{{default_region}}"
    tags:
      Name: ansibletest
    state: present
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    tenancy: default
    dns_hostnames: yes
    dns_support: yes
  register: vpc_info
  #store output of ec2 infroamtion

# start of public subnets -------------------------------
- name: create public subnets 1a, 1b, 1c
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{vpc_info.vpc.id}}"
    #apply vpc-id from registered variables
    cidr: 10.0.1.0/24
    az: us-east-1a
    map_public: yes
    tags:
      Name: pub_sub_az_1a
  register: pub_sub_az_1a

  ec2_vpc_subnet:
    state: present
    vpc_id: "{{vpc_info.vpc.id}}"
    #apply vpc-id from registered variables
    cidr: 10.0.2.0/24
    az: us-east-1b
    map_public: yes
    tags:
      Name: pub_sub_az_1b
  register: pub_sub_az_1b

  ec2_vpc_subnet:
    state: present
    vpc_id: "{{vpc_info.vpc.id}}"
    #apply vpc-id from registered variables
    cidr: 10.0.3.0/24
    az: us-east-1c
    map_public: yes
    tags:
      Name: pub_sub_az_1c
  register: pub_sub_az_1c
#End of the public subnets---------------------------------

# begging of private subnets--------------------------------
- name: create private subnets 1a, 1b, 1c
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{vpc_info.vpc.id}}"
    #apply vpc-id from registered variables
    cidr: 10.0.4.0/24
    az: us-east-1a
    map_public: yes
    tags:
      Name: priv_sub_az_1a
  register: priv_sub_az_1a

  ec2_vpc_subnet:
    state: present
    vpc_id: "{{vpc_info.vpc.id}}"
    #apply vpc-id from registered variables
    cidr: 10.0.5.0/24
    az: us-east-1b
    map_public: yes
    tags:
      Name: priv_sub_az_1b
  register: priv_sub_az_1b

  ec2_vpc_subnet:
    state: present
    vpc_id: "{{vpc_info.vpc.id}}"
    #apply vpc-id from registered variables
    cidr: 10.0.6.0/24
    az: us-east-1c
    map_public: yes
    tags:
      Name: priv_sub_az_1c
  register: priv_sub_az_1c
# end of the private subnets-------------------------------

# create Inernet gateway
- name: create internet gateway for vpc
  ec2_vpc_igw:
    vpc_id: "{{vpc_info.vpc.id}}"
    state: present
    tags:
      Name: IG_Gateway
  register: igw
# end of internet gateway creation---------------------------

# create routing table for public and private subnets
- name: create public routing table
  ec2_vpc_route_table:
    vpc_id: "{{vpc_info.vpc.id}}"
    state: present
    tags:
      Name: pub_route
  # association of subnets
  # I am giving subnet tag name instead of ID
    subnets:
      #don't use this      #Use this
      - pub_sub_az_1a  "{{pub_sub_az_1a.subnet.id}}"
      - pub_sub_az_1b  "{{pub_sub_az_1b.subnet.id}}"
      - pub_sub_az_1c  "{{pub_sub_az_1c.subnet.id}}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"

# I am going to store vpc_id, IG_Gateway_id & subnets_ids to group_vars/all.yml
# Though I can use it later, in case i need those IDs.

- name: copy ids as variables
  lineinfile:
    path: ./group_vars/all.yml
    line: "{{item}}"
    with_item:
      - 'vpc_id: "{{vpc_info.vpc.id}}"'
      - 'pub_sub_az_1a: "{{pub_sub_az_1a.subnet.id}}"'
      - 'pub_sub_az_1b: "{{pub_sub_az_1b.subnet.id}}"'
      - 'pub_sub_az_1c: "{{pub_sub_az_1c.subnet.id}}"'
      - 'IG_Gateway_id: "{{ igw.gateway_id }}"'
    state: present
